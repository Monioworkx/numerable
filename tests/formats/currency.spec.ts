import { formatNumber } from '../../index';

describe('format: currency', () => {
    describe('format', () => {
        it('should bypass this file as it is not implemented', () => void 0);

        // it('should format to currency', () => {
        //     const tests: [number | null, string, string][] = [
        //         [0, '$0.00', '$0.00'],
        //         [null, '$0.00', ''],
        //         [0.99, '$0,0.00', '$0.99'],
        //         [1000.234, '$0,0.00', '$1,000.23'],
        //         [1001, '$ 0,0.[00]', '$ 1,001'],
        //         [1000.234, '0,0.00 $', '1,000.23 $'],
        //         [-1000.234, '0,0.00 $', '-1,000.23 $'],
        //         [-1000.234, '($0,0)', '($1,000)'],
        //         [-1000.234, '(0,0$)', '(1,000$)'],
        //         [-1000.234, '(0,0 $)', '(1,000 $)'],
        //         [-1000.234, '$0.00', '-$1000.23'],
        //         [-1000.234, '$ 0.00', '-$ 1000.23'],
        //         [1230974, '($0.00 a)', '$1.23 M'],
        //         [-1000.234, '$ (0,0)', '$ (1,000)'],
        //         [-1000.234, '$(0,0)', '$(1,000)'],
        //         [-1000.234, '$ (0,0.00)', '$ (1,000.23)'],
        //         [-1000.234, '$(0,0.00)', '$(1,000.23)'],
        //         [-1000.238, '$(0,0.00)', '$(1,000.24)'],
        //         [-1000.234, '$-0,0', '$-1,000'],
        //         [-1000.234, '$ -0,0', '$ -1,000'],
        //         [1000.234, '$ (0,0)', '$ 1,000'],
        //         [1000.234, '$(0,0)', '$1,000'],
        //         [1000.234, '$ (0,0.00)', '$ 1,000.23'],
        //         [1000.234, '$(0,0.00)', '$1,000.23'],
        //         [1000.238, '$(0,0.00)', '$1,000.24'],
        //         [1000.234, '$-0,0', '$1,000'],
        //         [1000.234, '$ -0,0', '$ 1,000'],
        //     ];

        //     tests.forEach(([value, pattern, expectedResult]) => {
        //         const result = formatNumber(value, pattern);
        //         expect([value, pattern, result]).toEqual([value, pattern, expectedResult]);
        //     });
        // });

        // it('should unformat to currency', function() {
        //     var tests = [
        //             ['$0.00', 0],
        //             ['$0.99', 0.99],
        //             ['$1,000.23', 1000.23],
        //             ['1,000.23 $', 1000.23],
        //             ['($1,000)', -1000],
        //             ['-1,000$', -1000],
        //             ['$1.23 m', 1230000],
        //         ],
        //         i;

        //     for (i = 0; i < tests.length; i++) {
        //         expect(numeral(tests[i][0]).value()).to.equal(tests[i][1]);
        //     }
        // });
    });
});
